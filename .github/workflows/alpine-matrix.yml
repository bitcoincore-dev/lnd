name: alpine-matrix

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  GIT_DISCOVERY_ACROSS_FILESYSTEM: 1

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        tag: [3.13.5]

    container: alpine:${{ matrix.tag }}

    steps:
      - run: touch ~/GITHUB_TOKEN.txt
      ## notice: this is a pre checkout step
      ## notice: additional operations can be done prior to checkout
			## - run: apk update && apk add autoconf automake bash build-base docker file git libc-dev libcurl libtool make openrc openssl-dev python3 py3-pip sed util-linux
      - run: apk add autoconf automake bash build-base docker file git libc-dev libcurl libtool make openrc openssl-dev python3 py3-pip sed util-linux zlib-dev
      #- run: sudo ln -sf $(echo which python3) /usr/bin/python && rc-update add docker boot && service docker start
      - run: ln -sf /usr/bin/python3 /usr/local/bin/python
      #- run: rc-update add docker boot && service docker start

      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          submodules: 'true'
          set-safe-directory: 'true'

      ## post-checkout sequence
      - run: make
      #- run: make clean
      #- run: make clean-secp
      - run: make help
      #- run: make docker-start
      - run: make report
      #- run: make libjq.a
      - run: make libsecp256k1.a
      - run: make gnostr

      ## build example
      #- run:  if [ ! -d ctags ]; then git clone https://github.com/universal-ctags/ctags; fi
      #- run: apt -y install gcc make pkg-config autoconf automake python3-docutils libseccomp-dev libjansson-dev libyaml-dev libxml2-dev
      #- run: install autogen.sh ctags
      #- run: cd ctags && ./autogen.sh configure
      #- run: cd ctags && ./configure --prefix=/usr
      #- run: cd ctags && make
      #- run: cd ctags && make install
      #- run: file /usr/bin/ctags
      #- run: /usr/bin/ctags --version

      ## sequence success!!
      - run: make tag 2>/dev/null
